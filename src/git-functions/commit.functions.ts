import { map, catchError, mergeMap, NEVER } from 'rxjs';
import { executeCommandObs } from '../execute-command/execute-command';
import { CommitCompact } from './commit.model';

// fetchCommit is a function that fetched all the commits from a git repo and returns the sha of each commit and its date

// #copilot comment - the following comment has been added by copilot

// It uses the git log command to fetch the commits
// It returns an observable of an array of strings
// Each string is a commit sha and date separated by a comma
// The observable is an error if the command fails
export function fetchCommits(repoPath: string) {
    if (!repoPath) throw new Error(`Path is mandatory`);

    const command = `cd ${repoPath} && git log --pretty=format:"%H,%ad"`;

    return executeCommandObs(`Fetch commits`, command).pipe(
        map((commits: string) => commits.split('\n')),
        mergeMap((commits: string[]) => commits),
        map((commit: string) => {
            return newCommitCompact(commit)
        }),
        catchError((err) => {
            console.error(`Error: "fetchCommits" while executing command "${command}" - error ${JSON.stringify(err, null, 2)}`)
            return NEVER
        })
    );
}

// newCommitCompact returns a new CommitCompact object with the given sha and date
export function newCommitCompact(data: string) {
    const shaDate = data.split(',')
    return { sha: shaDate[0], date: new Date(shaDate[1]) } as CommitCompact
}

// commitsByMonth returns an array of CommitCompact objects grouped by month
// #copilot - the entire method has been generated by copilot, the only thing I changes was the key where copilot put
// month first and year second, I changed it to year first and month second
// I also changed the format of the month to be 2 digits
export function commitsByMonth(commits: CommitCompact[]) {
    const commitsByMonth = commits.reduce((acc, commit) => {
        const month = ("0" + (commit.date.getMonth() + 1)).slice(-2)
        const year = commit.date.getFullYear()
        const key = `${year}-${month}`
        if (!acc[key]) {
            acc[key] = []
        }
        acc[key].push(commit)
        return acc
    }, {} as { [key: string]: CommitCompact[] })
    return commitsByMonth
}