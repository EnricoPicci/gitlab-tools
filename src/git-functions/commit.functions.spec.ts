import { expect } from 'chai';
import { commitsByMonth } from './commit.functions';
import { CommitCompact } from './commit.model';

// #copilot - these tests have been generated by copilot, not perfet but reasonably well structured
describe('commitsByMonth', () => {
    it('should group commits by month and year', () => {
        const commits: CommitCompact[] = [
            { sha: '123', date: new Date('2021-01-01') },
            { sha: '456', date: new Date('2021-01-15') },
            { sha: '789', date: new Date('2021-02-01') },
            { sha: 'abc', date: new Date('2021-02-15') },
            { sha: 'def', date: new Date('2021-03-01') },
        ]
        const expected = {
            '2021-01': [
                { sha: '123', date: new Date('2021-01-01') },
                { sha: '456', date: new Date('2021-01-15') },
            ],
            '2021-02': [
                { sha: '789', date: new Date('2021-02-01') },
                { sha: 'abc', date: new Date('2021-02-15') },
            ],
            '2021-03': [
                { sha: 'def', date: new Date('2021-03-01') },
            ],
        }
        Object.entries(expected).forEach(([key, value]) => {
            expect(commitsByMonth(commits)[key]).deep.equal(value)
        })
    })

    it('should return an empty object for an empty array', () => {
        const commits: CommitCompact[] = []
        const expected = {}
        expect(commitsByMonth(commits)).deep.equal(expected)
    })
})